/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.editordetexto;

import java.awt.Color;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import static java.lang.Integer.parseInt;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.event.ChangeListener;

/**
 *
 * @author david
 */
public class Ventana extends javax.swing.JFrame {

    //Atributos
    private JFileChooser fc = new JFileChooser();
    private File archivo;
    private Color colorFuente = Color.BLACK;
    private String tamanhoFuente = "";
    
    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hechoPor = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        enlaceGit = new javax.swing.JTextField();
        colorChooser = new javax.swing.JDialog();
        colorSeleccionado = new javax.swing.JColorChooser();
        seleccionarColor = new javax.swing.JButton();
        formato = new javax.swing.JDialog();
        spinner = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        fontName = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        botonColor = new javax.swing.JButton();
        capitalizacion = new javax.swing.JDialog();
        mayus = new javax.swing.JButton();
        minus = new javax.swing.JButton();
        camel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        texto = new javax.swing.JTextArea();
        info = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        abrir = new javax.swing.JMenuItem();
        guardar = new javax.swing.JMenuItem();
        guardarComo = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        salir = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        fuente = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        caseMenu = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        autor = new javax.swing.JMenuItem();

        hechoPor.getContentPane().setLayout(new javax.swing.BoxLayout(hechoPor.getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jLabel1.setText("Hecho por David Ramos Navas");
        hechoPor.getContentPane().add(jLabel1);

        enlaceGit.setText("https://github.com/DavidRN01/Editor-de-Texto.git");
        hechoPor.getContentPane().add(enlaceGit);

        colorChooser.setResizable(false);
        colorChooser.getContentPane().add(colorSeleccionado, java.awt.BorderLayout.CENTER);

        seleccionarColor.setText("Seleccionar Color");
        seleccionarColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarColorActionPerformed(evt);
            }
        });
        colorChooser.getContentPane().add(seleccionarColor, java.awt.BorderLayout.PAGE_END);

        formato.setMinimumSize(new java.awt.Dimension(500, 350));
        formato.setResizable(false);

        spinner.setValue(12);
        spinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerStateChanged(evt);
            }
        });

        jLabel2.setText("Tama√±o Fuente");

        fontName.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Abadi MT Condensed Extra Bold", "Abadi MT Condensed Light", "Academy Engraved LET", "Al Bayan", "American Typewriter", "Andale Mono", "Apple Casual", "Apple Chancery", "Apple LiGothic", "Apple LiSung", "Apple Symbols", "AppleGothic", "AppleMyungjo", "Arial", "Arial Black", "Arial Hebrew", "Arial Narrow", "Arial Rounded MT Bold", "Ayuthaya", "Baghdad", "Bank Gothic", "Baskerville", "Baskerville Old Face", "Batang", "Bauhaus 93", "Bell MT", "Bernard MT Condensed", "BiauKai", "Big Caslon", "Bitstream Vera Sans", "Bitstream Vera Sans Mono", "Bitstream Vera Serif", "Blackmoor LET", "BlairMdITC TT", "Bodoni Ornaments ITC TT", "Bodoni SvtyTwo ITC TT", "Bodoni SvtyTwo OS ITC TT", "Bodoni SvtyTwo SC ITC TT", "Book Antiqua", "Bookman Old Style", "Bordeaux Roman Bold LET", "Bradley Hand ITC TT", "Braggadocio", "Britannic Bold", "Brush Script MT", "Calisto MT", "Century", "Century Gothic", "Century Schoolbook", "Chalkboard", "Charcoal CY", "Cochin", "Colonna MT", "Comic Sans MS", "Cooper Black", "Copperplate", "Copperplate Gothic Bold", "Copperplate Gothic Light", "Corsiva Hebrew", "Courier", "Courier New", "Cracked", "Curlz MT", "DecoType Naskh", "Desdemona", "Devanagari MT", "Dialog", "DialogInput", "Didot", "Edwardian Script ITC", "Engravers MT", "Euphemia UCAS", "Eurostile", "Footlight MT Light", "Futura", "Garamond", "GB18030 Bitmap", "Geeza Pro", "Geneva", "Geneva CY", "Georgia", "Gill Sans", "Gill Sans Ultra Bold", "Gloucester MT Extra Condensed", "Goudy Old Style", "Gujarati MT", "Gulim", "Gurmukhi MT", "Haettenschweiler", "Handwriting - Dakota", "Harrington", "Hei", "Helvetica", "Helvetica CY", "Helvetica Neue", "Herculanum", "Hiragino Kaku Gothic Pro", "Hiragino Kaku Gothic Std", "Hiragino Maru Gothic Pro", "Hiragino Mincho Pro", "Hoefler Text", "Impact", "Imprint MT Shadow", "InaiMathi", "Jazz LET", "Kai", "Kino MT", "Krungthep", "KufiStandardGK", "LiHei Pro", "LiSong Pro", "Lucida Blackletter", "Lucida Bright", "Lucida Calligraphy", "Lucida Fax", "Lucida Grande", "Lucida Handwriting", "Lucida Sans", "Lucida Sans Typewriter", "Marker Felt", "Matura MT Script Capitals", "Mistral", "Modern No. 20", "Mona Lisa Solid ITC TT", "Monaco", "Monospaced", "Monotype Corsiva", "Monotype Sorts", "MS Gothic", "MS Mincho", "MS PGothic", "MS PMincho", "Mshtakan", "MT Extra", "Nadeem", "New Peninim MT", "News Gothic MT", "Onyx", "OpenSymbol", "Optima", "Osaka", "Palatino", "Papyrus", "Party LET", "Perpetua Titling MT", "Plantagenet Cherokee", "Playbill", "PMingLiU", "PortagoITC TT", "Princetown LET", "Raanana", "Rockwell", "Rockwell Extra Bold", "SansSerif", "Santa Fe LET", "Sathu", "Savoye LET", "SchoolHouse Cursive B", "SchoolHouse Printed A", "Serif", "Silom", "SimSun", "Skia", "Snell Roundhand", "Stencil", "STFangsong", "STHeiti", "STKaiti", "Stone Sans ITC TT", "Stone Sans Sem ITC TT", "STSong", "Symbol", "Synchro LET", "Tahoma", "Thonburi", "Times", "Times New Roman", "Trebuchet MS", "Type Embellishments One LET", "Verdana", "Webdings", "Wide Latin", "Wingdings", "Wingdings 2", "Wingdings 3", "Zapf Dingbats", "Zapfino" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        fontName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fontNameMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(fontName);

        jLabel3.setText("Tipo de fuente (algunas no se ven)");

        botonColor.setText("Color");
        botonColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonColorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout formatoLayout = new javax.swing.GroupLayout(formato.getContentPane());
        formato.getContentPane().setLayout(formatoLayout);
        formatoLayout.setHorizontalGroup(
            formatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formatoLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(botonColor)
                .addGap(28, 28, 28)
                .addGroup(formatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(33, 33, 33)
                .addGroup(formatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        formatoLayout.setVerticalGroup(
            formatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formatoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(formatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                    .addGroup(formatoLayout.createSequentialGroup()
                        .addGroup(formatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spinner, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonColor))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        capitalizacion.setResizable(false);

        mayus.setText("May√∫sculas");
        mayus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mayusActionPerformed(evt);
            }
        });

        minus.setText("Min√∫sculas");
        minus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusActionPerformed(evt);
            }
        });

        camel.setText("Camel Case");

        javax.swing.GroupLayout capitalizacionLayout = new javax.swing.GroupLayout(capitalizacion.getContentPane());
        capitalizacion.getContentPane().setLayout(capitalizacionLayout);
        capitalizacionLayout.setHorizontalGroup(
            capitalizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(capitalizacionLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(mayus)
                .addGap(43, 43, 43)
                .addComponent(minus)
                .addGap(52, 52, 52)
                .addComponent(camel)
                .addContainerGap(34, Short.MAX_VALUE))
        );
        capitalizacionLayout.setVerticalGroup(
            capitalizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(capitalizacionLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(capitalizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mayus)
                    .addComponent(minus)
                    .addComponent(camel))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        texto.setColumns(20);
        texto.setRows(5);
        jScrollPane1.setViewportView(texto);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        info.setText("Tama√±o: Ubicaci√≥n:");
        getContentPane().add(info, java.awt.BorderLayout.PAGE_END);

        jMenu1.setText("Archivo");

        abrir.setText("Abrir");
        abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirActionPerformed(evt);
            }
        });
        jMenu1.add(abrir);

        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });
        jMenu1.add(guardar);

        guardarComo.setText("Guardar como");
        guardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarComoActionPerformed(evt);
            }
        });
        jMenu1.add(guardarComo);
        jMenu1.add(jSeparator1);

        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        jMenu1.add(salir);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Formato");

        fuente.setText("Fuente");
        fuente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fuenteActionPerformed(evt);
            }
        });
        jMenu3.add(fuente);
        jMenu3.add(jSeparator2);

        caseMenu.setText("Capitalizaci√≥n");
        caseMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caseMenuActionPerformed(evt);
            }
        });
        jMenu3.add(caseMenu);

        jMenuBar1.add(jMenu3);

        jMenu2.setText("Acerca de...");

        autor.setText("Hecho por...");
        autor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autorActionPerformed(evt);
            }
        });
        jMenu2.add(autor);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirActionPerformed
        
        //Creo la ventana para seleccionar archivos
        int status = fc.showOpenDialog(null);
        
        if(status == JFileChooser.APPROVE_OPTION) {
            //Creo el objeto tipo file y le asigno el que sea seleccionado
            archivo = fc.getSelectedFile();
            //Pongo en el label la informacion
            info.setText("Tama√±o: "+archivo.length()+" bytes Ubicaci√≥n: "+archivo.getPath());
            
            //Leemos el archivo y lo mostramos en pantalla
            try(BufferedReader br = new BufferedReader(new FileReader(archivo))) {
                
                //Usamos el iterador para recorrer cada linea
                Iterator<String> it = br.lines().iterator();
                while(it.hasNext()) {
                    //Creo un string para cada linea
                    String linea = it.next();
                    //Muestro en el text area cada linea
                    texto.append(linea + "\n");
                }

            } catch (FileNotFoundException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_abrirActionPerformed

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_salirActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        
        //Creamos un file writer
        //A√±adimos el par√°metro false para que no a√±ada nuevo texto, si no que
        //lo reemplace
        try(FileWriter fw = new FileWriter(archivo, false)) {
            
            //Sobreescribo el archivo
            fw.write(texto.getText());
            
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_guardarActionPerformed

    private void autorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autorActionPerformed
        
        //He hecho que el JDialog salga con un tama√±o adecuado
        hechoPor.setSize(400, 100);
        hechoPor.setVisible(true);
        
        enlaceGit.setText("https://github.com/DavidRN01/Editor-de-Texto.git");
   
    }//GEN-LAST:event_autorActionPerformed

    private void guardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarComoActionPerformed

        //Ventana para seleccionar donde guardar
        int status = fc.showSaveDialog(null);

        //Al pulsar guardar el archivo pasa a ser el seleccionado
        if (status == JFileChooser.APPROVE_OPTION) {
            archivo = fc.getSelectedFile();
        }
        
        //Escribo en un archivo nuevo lo que quiera guardar
        try(FileWriter fw = new FileWriter(archivo, false)) {

            fw.write(texto.getText());
            
        } catch (IOException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_guardarComoActionPerformed

    private void seleccionarColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarColorActionPerformed
        
        //Guardo el color de la fuente y se la pongo al texto
        colorFuente = colorSeleccionado.getColor();
        texto.setForeground(colorFuente);
        
    }//GEN-LAST:event_seleccionarColorActionPerformed

    private void fuenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fuenteActionPerformed
        
        //Saco la ventana con las opciones de formato
        formato.setVisible(true);

    }//GEN-LAST:event_fuenteActionPerformed

    private void spinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerStateChanged
        
        //Guardo el tama√±o en una variable, creo un Font con ese dato
        //y se lo asigno al texto
        int tamanho = (int) spinner.getValue();
        Font f = new Font(texto.getFont().getName(), texto.getFont().getStyle(), tamanho);
        texto.setFont(f);
        
    }//GEN-LAST:event_spinnerStateChanged

    private void fontNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fontNameMouseClicked
        
        //Creo un Font con el nombre que este seleccionado y lo asigno al texto
        Font f = new Font(fontName.getSelectedValue(), texto.getFont().getStyle(),  texto.getFont().getSize());
        texto.setFont(f);
        
    }//GEN-LAST:event_fontNameMouseClicked

    private void botonColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonColorActionPerformed
        
        colorChooser.setSize(700, 400);
        colorChooser.setVisible(true);
        
    }//GEN-LAST:event_botonColorActionPerformed

    private void caseMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caseMenuActionPerformed
        
        capitalizacion.setSize(430, 120);
        capitalizacion.setVisible(true);
        
    }//GEN-LAST:event_caseMenuActionPerformed

    private void mayusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mayusActionPerformed
        
        texto.setText(texto.getText().toUpperCase());
        
    }//GEN-LAST:event_mayusActionPerformed

    private void minusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusActionPerformed
        
        texto.setText(texto.getText().toLowerCase());
        
    }//GEN-LAST:event_minusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //Aqui he hecho un par de cambios para que la ventana
                //salga con un tama√±o mas adecuado
                Ventana Ventana = new Ventana();
                Ventana.setSize(600, 300);
                Ventana.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem abrir;
    private javax.swing.JMenuItem autor;
    private javax.swing.JButton botonColor;
    private javax.swing.JButton camel;
    private javax.swing.JDialog capitalizacion;
    private javax.swing.JMenuItem caseMenu;
    private javax.swing.JDialog colorChooser;
    private javax.swing.JColorChooser colorSeleccionado;
    private javax.swing.JTextField enlaceGit;
    private javax.swing.JList<String> fontName;
    private javax.swing.JDialog formato;
    private javax.swing.JMenuItem fuente;
    private javax.swing.JMenuItem guardar;
    private javax.swing.JMenuItem guardarComo;
    private javax.swing.JDialog hechoPor;
    private javax.swing.JLabel info;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JButton mayus;
    private javax.swing.JButton minus;
    private javax.swing.JMenuItem salir;
    private javax.swing.JButton seleccionarColor;
    private javax.swing.JSpinner spinner;
    private javax.swing.JTextArea texto;
    // End of variables declaration//GEN-END:variables
}
